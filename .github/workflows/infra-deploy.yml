name: infra-deploy
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_DIR: ./terraform
  TFSTATE_RG: ${{ vars.TFSTATE_RG }}
  TFSTATE_SA: ${{ vars.TFSTATE_SA }}
  TFSTATE_CONTAINER: ${{ vars.TFSTATE_CONTAINER }}
  TFSTATE_KEY: ${{ vars.TFSTATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (remote backend)
        working-directory: ${{ env.TF_DIR }}
        env:
          ARM_USE_OIDC: "true"
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          terraform init \
            -backend-config="resource_group_name=${TFSTATE_RG}" \
            -backend-config="storage_account_name=${TFSTATE_SA}" \
            -backend-config="container_name=${TFSTATE_CONTAINER}" \
            -backend-config="key=${TFSTATE_KEY}"

      - name: Terraform Apply
        working-directory: ${{ env.TF_DIR }}
        env:
          ARM_USE_OIDC: "true"
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve

      - name: Show outputs
        working-directory: ${{ env.TF_DIR }}
        run: terraform output
